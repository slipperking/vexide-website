---
import { GITHUB_REPO_URL, EXAMPLES } from "config";

import { getCollection } from "astro:content";

import PageLayout from "layouts/PageLayout.astro";
import PageSection from "components/PageSection.astro";
import CodeExample from "components/CodeExample.astro";
import BlogCard from "components/BlogCard.svelte";

import Button from "components/Button.svelte";

const latestBlogPost = (
    await getCollection(
        "blog",
        ({ data }) => !data?.draft,
    )
).sort(
    (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime(),
)[0];
---

<PageLayout>
    <main id="content">
        <PageSection id="hero">
            <div class="hero-left">
                <div class="hero-lead">
                    <h1 class="title">
                        Open-source Rust runtime for VEX robots.
                    </h1>
                    <p class="subtitle">
                        vexide provides a safe and efficient runtime and
                        toolchain for writing VEX V5 programs in the <a
                            href="https://rust-lang.com/"
                            target="_blank"
                            rel="noreferrer noopener"
                            >Rust Programming Language</a
                        >. ðŸ¦€
                    </p>
                </div>
                <div class="hero-buttons">
                    <Button variant="accent" href="/docs/">Learn More</Button>
                    <Button
                        variant="default"
                        href={GITHUB_REPO_URL}
                        rel="noreferrer noopener"
                        target="_blank"
                    >
                        GitHub
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="18"
                            height="18"
                            viewBox="0 0 32 32"
                        >
                            <path
                                fill="currentColor"
                                d="M10 6v2h12.59L6 24.59L7.41 26L24 9.41V22h2V6z"
                            ></path>
                        </svg>
                    </Button>
                </div>
            </div>
            <div class="hero-right">
                <CodeExample
                    lang="rust"
                    filename="main.rs"
                    code={EXAMPLES[0].code}
                />
                <BlogCard
                    url={`/blog/posts/${latestBlogPost.slug}/`}
                    title={latestBlogPost.data.title}
                    description={latestBlogPost.data.description}
                    author={latestBlogPost.data.author}
                    date={new Date(latestBlogPost.data.date)}
                    thumbnail={latestBlogPost.data.thumbnail?.url}
                    thumbnailAlt={latestBlogPost.data.thumbnail?.alt}
                />
            </div>
        </PageSection>
    </main>
</PageLayout>

<style>
    @keyframes slide-up {
        from {
            transform: translateY(8px);
            opacity: 0;
        }
    }

    #hero {
		overflow: hidden;
		display: flex;
		justify-content: center;
        z-index: 1;
        border-bottom: 1px solid var(--background-secondary);
        --grid-color: hsl(var(--base-hue), 12%, 18%);
        background-size: 20px 20px;
        background-image: linear-gradient(
                to right,
                var(--grid-color) 1px,
                transparent 1px
            ),
            linear-gradient(to bottom, var(--grid-color) 1px, transparent 1px);
    }

    #hero::before {
        content: "";
        position: absolute;
        bottom: 0;
        width: 1800px;
        height: 75%;
        margin: 0 auto;
        opacity: 0.04;
        display: block;
        background-image: radial-gradient(80% 100% at center bottom, #6e59ff 30%, #223ca9, transparent 60%);
    }

    #hero > :global(.page-section-inner) {
        display: flex;
        gap: 84px;
        max-block-size: 720px;
        padding-block: 72px;
    }

    .hero-left,
    .hero-right {
        display: flex;
        flex-direction: column;
    }

    .hero-left {
        flex: 1 1 60%;
    }

    .hero-right {
        flex: 1 0 40%;
        min-inline-size: 0;
        gap: 20px;
    }

    .hero-lead {
        flex: 1 1 auto;
    }

    .hero-lead .title {
        animation: slide-up 500ms backwards 150ms;
    }

    .hero-lead .subtitle {
        margin-block-start: 36px;
        animation: slide-up 500ms backwards 350ms;
    }

    .hero-buttons {
        animation: slide-up 500ms backwards 450ms;
        flex: 0 0 auto;
        display: flex;
        flex-wrap: wrap;
        gap: 16px;
    }

    .hero-right :global(.code-example) {
        animation: slide-up 500ms backwards 500ms;
    }

    @media screen and (max-width: 1024px) {
        #hero > :global(.page-section-inner) {
            max-block-size: unset;
            padding-block: 64px;
            flex-direction: column;
        }
    }

    @media screen and (max-width: 1280px) {
        #hero > :global(.page-section-inner) {
            block-size: unset;
            min-block-size: unset;
            padding-block: 72px;
        }
    }
</style>
