---
import { Code } from "astro:components";

interface Props {
	filename: string;
	lang: string;
	code: string;
}

const { filename, lang, code } = Astro.props;
---

<div class="code-example">
	<div class="code-example-header">
		<strong>{filename}</strong>
		{
			Astro.slots.has("actions") && (
				<div class="code-example-actions">
					<slot name="actions" />
				</div>
			)
		}
	</div>
	<!-- @ts-ignore -->
	<Code {lang} {code} />
</div>

<style>
	.code-example {
		display: flex;
		flex-direction: column;
		border-radius: 4px;
		border: 1px solid var(--background-secondary);
		flex: 1 1 auto;
		overflow: hidden;
		min-height: 0;
		background: var(--background-primary);
	}

	.code-example-header {
		user-select: none;
		display: flex;
		background-color: var(--grid-color);
		border-bottom: 1px solid var(--background-secondary);
		padding-inline: 12px;
		padding-block: 8px;
		justify-content: space-between;
		position: relative;
		align-items: center;
	}

	.code-example-header strong {
		font-family: var(--font-monospace);
		font-weight: 400;
		font-size: 1.4rem;
	}

	.code-example :global(pre) {
		block-size: 100%;
		cursor: text;
		background-color: transparent !important;
		padding: 12px;
		margin: 0;
		overflow: auto;
		scrollbar-width: thin;
		scrollbar-color: var(--foreground-tertiary) var(--background-primary);
	}

	.code-example :global(code) {
		line-height: 1.4;
		counter-reset: step;
		counter-increment: step 0;
	}

	.code-example :global(code .line::before) {
		content: counter(step);
		counter-increment: step;
		display: inline-block;
		margin-inline-end: 1.5rem;
		color: var(--foreground-secondary);
	}
</style>
